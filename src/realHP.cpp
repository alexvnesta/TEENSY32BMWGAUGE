#define tq_bmp_height 30
#define tq_bmp_width 30
static const unsigned char tq_bmp[] = {   
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x38, 0x00,
   0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0xcc, 0x01,
   0x00, 0xc0, 0x99, 0x03, 0x00, 0xe0, 0x33, 0x07, 0x00, 0xf0, 0x67, 0x0e,
   0x00, 0xf8, 0xcf, 0x1c, 0x00, 0xfc, 0x9f, 0x19, 0x00, 0xfe, 0x39, 0x03,
   0x00, 0xfc, 0x70, 0x06, 0x00, 0xf8, 0xf1, 0x04, 0x00, 0xf0, 0xfb, 0x01,
   0x00, 0x00, 0xff, 0x01, 0x00, 0x78, 0xff, 0x00, 0x00, 0x78, 0x7f, 0x00,
   0x00, 0x1c, 0x3e, 0x00, 0x00, 0x1c, 0x1c, 0x00, 0x30, 0x07, 0x08, 0x00,
   0x78, 0x07, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x86, 0x01, 0x00, 0x00,
   0x03, 0x03, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x86, 0x01, 0x00, 0x00,
   0xcc, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00 };

#define horse_xbm_width 30
#define horse_xbm_height 30
static const unsigned char horse_xbm_bits[] = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x0c,0x00,0x00,0x00,0x1f,0x00,0x00,0xc0,0x3f,0x00,0x00,0xf0,0x67,0x00,0x00,
 0xf8,0xd3,0x00,0x00,0xf0,0x00,0x01,0x18,0x1c,0x08,0x02,0xf0,0x07,0xf8,0x04,
 0x00,0x00,0x0c,0x07,0x00,0xe0,0x07,0x02,0x00,0x00,0x01,0x00,0x00,0x00,0x3e,
 0x00,0x00,0x00,0x40,0x00,0x00,0x10,0x7f,0x00,0x00,0xf0,0x30,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };

#include "globals.h"
#include "parseCan.h"
#include "realHP.h"

float calcHorsePower = 0;
float horsepowermax = 0;
float torquemax = 0;
uint32_t maxReset = 0;

void drawHPGauge(void){
    if (setupInitScreen == true){
    initScreen();
    setupInitScreen = false;
    }

    u8g2.firstPage();
    do {
    
      /// Calculate horsepower
      if (rpm > 0 && torquelbf > 0) calcHorsePower = (rpm * torquelbf) / (60/(2*3.1415962))/1000;

      /// reset max values
      if ((millis() - maxReset) > 10000){
          torquemax = 0;
          horsepowermax = 0;
          maxReset = millis();
      }

      if (torquelbf > torquemax){
          torquemax = torquelbf;
      }
      if (calcHorsePower > horsepowermax){
          horsepowermax = calcHorsePower;
      }

      u8g2.setFont(u8g2_font_logisoso16_tn);
      u8g2.drawXBMP(0, 0, tq_bmp_width, tq_bmp_height, tq_bmp);

      u8g2.setCursor(35,20);
      u8g2.print(torquelbf,0);
      
      u8g2.setCursor(80,20);
      u8g2.print(torquemax,0);

      u8g2.setFont(u8g2_font_logisoso16_tn);
      u8g2.drawXBMP(0, 40, horse_xbm_width, horse_xbm_height, horse_xbm_bits);

      u8g2.setCursor(35,62);
      u8g2.print(calcHorsePower,0);
      
      u8g2.setCursor(80,62);
      u8g2.print(horsepowermax,0);

      u8g2.setFont(u8g2_font_freedoomr10_mu);

      u8g2.setCursor(36,40);
      u8g2.print("REAL");

      u8g2.setCursor(80,40);
      u8g2.print("MAX");

  } while ( u8g2.nextPage() );


}

